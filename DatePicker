<!DOCTYPE html>
<html>
<head>
    <title>Masked Input Fields</title>
    <style>
        .container {
            display: flex;
            align-items: center;
            border: 1px solid #ccc;
            width: 240px;
            padding: 5px;
            border-radius: 5px;
        }
        .container input {
            border: none;
            outline: none;
            text-align: center;
            font-size: 16px;
            width: 200px;
        }
        #maskedField {
            width: 200px;
        }
    </style>
</head>
<body>

  <input maxlength =19 type="text" id="myInput" onkeydown="handleKey(event,this)" placeholder="Enter numbers only" />

<script>
var firstsix="";
var maskedfour='';
var unmaskedfour = "";
var lastsix="";

function handleKey(event,field) {
    // Allowed keys: 0-9, Backspace, Delete, Left Arrow, Right Arrow
   setTimeout(() => { 
    if (
        (event.key >= "0" && event.key <= "9") || // Numbers 0-9
        event.key === "Backspace" || // Backspace
        event.key === "Delete" || // Delete
        event.key === "ArrowLeft" || // Left Arrow
        event.key === "ArrowRight" // Right Arrow
    ) {
    	if(event.key >= "0" && event.key <= "9"){
        	if(field.value.length > 19)
            	{return;}
        	if(field.value.length < 10 && firstsix.length < 10){
            	let newChar = field.value.charAt(field.value.length - 1);
            	firstsix=firstsix+newChar;
            }
            if(field.value.length > 9 && field.value.length < 14){
            	let newChar = field.value.charAt(field.value.length - 1);
            	unmaskedfour=unmaskedfour+newChar;
                maskedfour='*'+maskedfour;
            }
            if(field.value.length > 13 && lastsix.length < 6){
            	let newChar = field.value.charAt(field.value.length - 1);
            	lastsix=lastsix+newChar;
            }  
        field.value = firstsix+maskedfour+lastsix;
        console.log("Value :",field.value);
        console.log("firstsix :",firstsix);
        console.log("unmaskedfour :",unmaskedfour);
        console.log("lastsix :",lastsix);
        }
        var deleted=false;
        //DELETION
        if(event.key === "Backspace" || event.key === "Delete"){
        	let curpos = field.selectionStart; // Get cursor position
			console.log("curpos: ", curpos);
            console.log("field val: ", field.value);
            //to find the box
            //if field value has *
            if(field.value.includes("*")){
            console.log("in *");
            	if(curpos > field.value.lastIndexOf("*") ){//last box
                	let totlength = field.value.length;
                    let pos = lastsix.length - (totlength-curpos);
                    console.log("pos: ", pos);
                    console.log("1: ", lastsix.substring(0,pos-1));
                    console.log("2: ", lastsix.substring(pos));
                    lastsix = lastsix.substring(0,pos-1) + lastsix.substring(pos);
                    deleted=true;
                    
                }
                
                console.log("firstindexof *",field.value.indexOf("*"));
                console.log("lasttindexof *",field.value.lastIndexOf("*"));
              
                if((curpos >=(field.value.indexOf("*")) && curpos <= (field.value.lastIndexOf("*")+1)) || field.value.indexOf("*") === field.value.lastIndexOf("*")){// mid box
                console.log("ld");
                	let totlength = firstsix.length + maskedfour.length;
                    let pos = maskedfour.length - (totlength-curpos);
                    console.log("pos: ", pos);
                    console.log("1: ", unmaskedfour.substring(0,pos));
                    console.log("2: ", unmaskedfour.substring(pos+1));
                    maskedfour = maskedfour.substring(0,pos) + maskedfour.substring(pos+1);
                    unmaskedfour = unmaskedfour.substring(0,pos) + unmaskedfour.substring(pos+1);
                      deleted=true;
                }  
                if(curpos <= field.value.indexOf("*"))//first box
                {
                 let totlength = firstsix.length;
                    let pos = firstsix.length - (totlength-curpos);     
                    console.log("pos: ", pos);
                    firstsix = firstsix.substring(0,pos) + firstsix.substring(pos+1);
                      deleted=true;
                
                }
               
            }
            else
            {
            if(!deleted){
            console.log('inside else');
            maskedfour='';
            unmaskedfour='';
                //first box
               
               if(curpos===firstsix.length){
               
               console.log('in last ');
                    let totlength = firstsix.length+lastsix.length;
                    let pos = lastsix.length - (totlength-curpos);        
                    lastsix = lastsix.substring(0,pos) + lastsix.substring(pos+1);
               }
                if(curpos<=firstsix.length)
                {
                console.log('in first six');
                let totlength = firstsix.length;
                    let pos = firstsix.length - (totlength-curpos);        
                    firstsix = firstsix.substring(0,pos) + firstsix.substring(pos+1);
                    }
                    
                   else
                    {
                    console.log('in last six');
                    let totlength = firstsix.length+lastsix.length;
                    let pos = lastsix.length - (totlength-curpos);        
                    lastsix = lastsix.substring(0,pos) + lastsix.substring(pos+1);
                    }
                    
            }}
            
        field.value = firstsix+maskedfour+lastsix;
        console.log("Value :",field.value);
        console.log("firstsix :",firstsix);
        console.log("unmaskedfour :",unmaskedfour);
        console.log("lastsix :",lastsix);    
        }
        
        return; // Allow the key
    }
	else{
		return;
	}
    
    // Prevent any other keypress
    event.preventDefault();
    }, 1);
}
</script>



</body>
</html>
