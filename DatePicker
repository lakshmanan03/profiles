# Redirect all HTTP traffic to HTTPS
server {
    listen 80;
    server_name yourdomain.com;
    
    # Redirect HTTP to HTTPS
    return 301 https://$host$request_uri;
}

# HTTPS server configuration
server {
    listen 443 ssl;
    server_name yourdomain.com;

    # SSL Certificate settings (replace with your actual paths)
    ssl_certificate /etc/nginx/ssl/your_certificate.crt;
    ssl_certificate_key /etc/nginx/ssl/your_certificate.key;
    ssl_protocols TLSv1.2 TLSv1.3;  # Ensure strong encryption protocols
    ssl_ciphers HIGH:!aNULL:!MD5;

    # Define the root directory for your React app
    root /var/www/your-app;

    # Set up Clear-Site-Data header (only for HTTPS)
    add_header Clear-Site-Data "cache, cookies, storage, executionContexts" always;

    # Set up Content Security Policy
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline';";

    # Serve static files from the React build directory
    location / {
        try_files $uri /index.html;
    }

    # Add caching headers for static files (optional)
    location ~* \.(js|css|png|jpg|jpeg|gif|svg|ico)$ {
        expires 30d;
        add_header Cache-Control "public, no-transform";
    }

    # Handle API proxy (optional, if your app uses API backend)
    location /api/ {
        proxy_pass http://localhost:3001;  # Assuming the API is running on port 3001
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}
