<!DOCTYPE html>
<html>
<head>
    <title>Masked Input Fields</title>
    <style>
        .container {
            display: flex;
            align-items: center;
            border: 1px solid #ccc;
            width: 240px;
            padding: 5px;
            border-radius: 5px;
        }
        .container input {
            border: none;
            outline: none;
            text-align: center;
            font-size: 16px;
            width: 100px;
        }
        #maskedField {
            width: 60px;
        }
    </style>
</head>
<body>

    <div class="container">
        <input type="text" id="firstField" maxlength="9" oninput="validateInput(this)" onkeyup="moveNext(this, 'maskedField')">
        <input type="text" id="maskedField" maxlength="4" oninput="maskInput(this)" onkeydown="handleBackspace(event, this)">
        <input type="text" id="thirdField" maxlength="6" oninput="validateInput(this)" onkeyup="moveNext(this, 'thirdField')">
    </div>

    <script>
        function moveNext(current, nextId) {
            if (current.value.length === current.maxLength) {
                document.getElementById(nextId).focus();
            }
        }

        function validateInput(field) {
        
            field.value = field.value.replace(/\D/g, ''); // Remove non-numeric characters
        }
        
        
        function validateInput1(field) {
        if(field.value.length ==3 && field.value.substring(0,2)==='00' && 
        field.value.substring(2,3)!=='0')
        
        {
        alert('please enter a valid value');
        document.getElementById('firstField').value=field.value.substring(0,2);
        return;
        }
        if(field.value.length ==4 && field.value.substring(0,3)==='000' && 
        field.value.substring(3,4)==='0')
        
        {
        alert('please enter a valid value');
        document.getElementById('firstField').value=field.value.substring(0,3);
        return;
        }
        
        
        if(field.value.length >6  && field.value.substring(0,3)!=='000')
        {
        document.getElementById('firstField').value=field.value.substring(0,6);
      
      document.getElementById('maskedField').focus();
     
    
        }
        
            field.value = field.value.replace(/\D/g, ''); // Remove non-numeric characters
        }

        function maskInput(field) {
            let actualValue = field.dataset.realValue || ""; // Store actual input
            let newChar = field.value[field.value.length - 1] || "";

            if (!isNaN(newChar) && newChar !== " " && actualValue.length < 4) {
                field.dataset.realValue = actualValue + newChar; // Append actual number
            }

            field.value = "*".repeat(field.dataset.realValue.length); // Mask input

            if (field.dataset.realValue.length === 4) {
                document.getElementById('thirdField').focus(); // Move to next field
            }
        }

        function handleBackspace(event, field) {
            let actualValue = field.dataset.realValue || "";

            if (event.key === "Backspace" && actualValue.length > 0) {
                field.dataset.realValue = actualValue.slice(0, -1); // Remove last character
                field.value = "*".repeat(field.dataset.realValue.length); // Update mask
                event.preventDefault(); // Prevent default backspace behavior
            }
        }

function handleMaskedKeyDown(event, field) {
            let actualValue = field.dataset.realValue || "";

            if (event.key === "Backspace" || event.key === "Delete") {
                let cursorPos = field.selectionStart; // Get cursor position

                if (cursorPos > 0) {
                    // Remove character at cursor position
                    actualValue = actualValue.substring(0, cursorPos - 1) + actualValue.substring(cursorPos);
                }

                field.dataset.realValue = actualValue;
                field.value = "*".repeat(actualValue.length); // Update masked display

                event.preventDefault(); // Prevent default backspace behavior
            }
        }
    </script>

</body>
</html>
