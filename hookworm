import React from 'react';
import { useForm, Controller } from 'react-hook-form';
import { TextField, Grid, Button, MenuItem } from '@mui/material';
import { DatePicker } from '@mui/x-pickers';
import AdapterDateFns from '@mui/lab/AdapterDateFns';
import LocalizationProvider from '@mui/lab/LocalizationProvider';

// Utility function to check if string contains special characters
const hasSpecialCharacter = (value) => /[!@#$%^&*(),.?":{}|<>]/.test(value);

function MyForm() {
  const { control, handleSubmit, formState: { errors } } = useForm();

  const defaultDate = new Date(); // Default value for the date picker

  const onSubmit = (data) => {
    console.log(data); // Do something with the form data
  };

  return (
    <form onSubmit={handleSubmit(onSubmit)}>
      <Grid container spacing={2}>
        <Grid item xs={12}>
          <Controller
            name="firstName"
            control={control}
            defaultValue=""
            rules={{
              required: 'First Name is required',
              validate: {
                noSpecialCharacter: value => !hasSpecialCharacter(value) || 'No special characters allowed',
              },
            }}
            render={({ field }) => (
              <TextField
                {...field}
                label="First Name"
                variant="standard"
                fullWidth
                error={Boolean(errors.firstName)}
                helperText={errors.firstName ? errors.firstName.message : ''}
              />
            )}
          />
        </Grid>
        <Grid item xs={12}>
          <Controller
            name="lastName"
            control={control}
            defaultValue=""
            rules={{
              required: 'Last Name is required',
              validate: {
                noSpecialCharacter: value => !hasSpecialCharacter(value) || 'No special characters allowed',
              },
            }}
            render={({ field }) => (
              <TextField
                {...field}
                label="Last Name"
                variant="standard"
                fullWidth
                error={Boolean(errors.lastName)}
                helperText={errors.lastName ? errors.lastName.message : ''}
              />
            )}
          />
        </Grid>
        <Grid item xs={12}>
          <Controller
            name="gender"
            control={control}
            defaultValue=""
            rules={{ required: 'Gender is required' }}
            render={({ field }) => (
              <TextField
                {...field}
                select
                label="Gender"
                variant="standard"
                fullWidth
                error={Boolean(errors.gender)}
                helperText={errors.gender ? errors.gender.message : ''}
              >
                <MenuItem value="male">Male</MenuItem>
                <MenuItem value="female">Female</MenuItem>
                <MenuItem value="other">Other</MenuItem>
              </TextField>
            )}
          />
        </Grid>
        <Grid item xs={12}>
          <LocalizationProvider dateAdapter={AdapterDateFns}>
            <Controller
              name="selectedDate"
              control={control}
              defaultValue={defaultDate}
              rules={{ required: 'Date of Birth is required' }}
              render={({ field }) => (
                <DatePicker
                  {...field}
                  label="Date of Birth"
                  inputFormat="MM/dd/yyyy"
                  renderInput={(params) => (
                    <TextField
                      {...params}
                      variant="standard"
                      error={Boolean(errors.selectedDate)}
                      helperText={errors.selectedDate ? errors.selectedDate.message : ''}
                    />
                  )}
                />
              )}
            />
          </LocalizationProvider>
        </Grid>
        <Grid item xs={12}>
          <Button type="submit" variant="contained" color="primary">
            Submit
          </Button>
        </Grid>
      </Grid>
    </form>
  );
}
    <form onSubmit={handleSubmit(onSubmit)}>
      <Controller
        name="date"
        control={control}
        render={({ field }) => (
          <DatePicker
            {...field}
            value={selectedDate}
            onChange={(date) => {
              setValue("date", date, { shouldValidate: true });
            }}
            renderInput={(params) => <TextField {...params} label="Select Date" variant="standard" />}
          />
        )}
      />
      <Button type="submit" variant="contained">Submit</Button>
    </form>
export default MyForm;
